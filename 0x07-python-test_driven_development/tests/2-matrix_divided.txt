The 'natrix_divided' module
============================
divides each element of a list of lists by the given divisor

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Normal case:
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Case divisor is 0:
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

Case matrix is not a list of lists of integer/float values:
>>> matrix_divided([[1, 2, 3], ["123", "234", "Bsb"], [4, 5, 6]], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

Case matrix is empty
>>> matrix_divided([], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

Case lists are not the same size:
>>> matrix_divided([[1, 2, 3, 5], [4, 5, 6]], 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

Case divisor is not a number:
>>> matrix_divided([[1, 2, 3, 5], [4, 5, 6]], "baby")
Traceback (most recent call last):
TypeError: div must be a number

Case divisor is None:
>>> matrix_divided([[1, 2, 3, 5], [4, 5, 6]], None)
Traceback (most recent call last):
TypeError: div must be a number



# doctest: +REPORT_NDIFF, +NORMALIZE_WHITESPACE
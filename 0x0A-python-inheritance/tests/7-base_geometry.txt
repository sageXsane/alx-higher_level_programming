7-base_geometry doctest
======================================
tests the integer_validator method

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()

Normal case:
>>> bg.integer_validator("my_int", 12)

Case integer is negative:
>>> bg.integer_validator("my_int", -12)
Traceback (most recent call last):
ValueError: my_int must be greater than 0

Case integer is zero:
>>> bg.integer_validator("my_int", 0)
Traceback (most recent call last):
ValueError: my_int must be greater than 0

Case value is empty
>>> bg.integer_validator("my_int", None)
Traceback (most recent call last):
TypeError: my_int must be an integer

Case value is not an integer:
>>> bg.integer_validator("my_int", [1, 2, 3])
Traceback (most recent call last):
TypeError: my_int must be an integer

Case string is empty
>>> bg.integer_validator("", 2)



# doctest: +REPORT_NDIFF, +NORMALIZE_WHITESPACE